{"map":"{\"version\":3,\"sources\":[\"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/src/App.js\",\"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/src/serviceWorker.js\",\"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/src/index.js\"],\"names\":[\"App\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"alt\",\"type\",\"name\",\"href\",\"target\",\"rel\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"yNA8CeA,0LAzCX,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAI,YAAYD,UAAU,WAAWE,IAAI,SAC9CL,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,aAAhB,KADF,kBAGEH,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,aAAhB,QAGFH,EAAAC,EAAAC,cAAA,QAAA,CAAOI,KAAK,OAAOC,KAAK,aAExBP,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,cAAf,gBACAH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YAAf,kBACiBH,EAAAC,EAAAC,cAAA,KAAA,MADjB,oBAEmBF,EAAAC,EAAAC,cAAA,KAAA,MAFnB,mBAOFF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,cAAf,gBACAH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YAAf,mBACkBH,EAAAC,EAAAC,cAAA,KAAA,MADlB,2BAE0BF,EAAAC,EAAAC,cAAA,KAAA,MAF1B,uBAQJF,EAAAC,EAAAC,cAAA,IAAA,CAAGM,KAAK,kBAAkBC,OAAO,SAASC,IAAI,uBAC5CV,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,iBAAlB,uBAnCMQ,EAAAA,YCSEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src='/wave.gif' className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <div className='title'>\\n            <span className='titleBlue'>&lt;</span>\\n            &nbsp;harmoni&nbsp;\\n            <span className='titleBlue'> &#47;&gt;</span>\\n          </div>\\n\\n          <input type='file' name='midiFile'/>\\n\\n          <div className='cardContainer'>\\n            <div className='card'>\\n              <div className='cardHeader'>YOU GIVE US:</div>\\n              <div className='cardBody'>\\n                Input MIDI file<br/>\\n                Monophonic Melody<br/>\\n                Basic Metadata\\n              </div>\\n            </div>\\n\\n            <div className='card'>\\n              <div className='cardHeader'>WE GIVE YOU:</div>\\n              <div className='cardBody'>\\n                Output MIDI file<br/>\\n                Harmonized Accompaniment<br/>\\n                Chord Progression\\n              </div>\\n            </div>\\n          </div>\\n\\n          <a href=\\\"http://will.com\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\\n            <button className='buttonPrimary'>HARMONIZE</button>\\n          </a>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,a,t){},15:function(e,a,t){},16:function(e,a,t){\"use strict\";t.r(a);var n=t(0),r=t.n(n),c=t(2),l=t.n(c),o=(t(14),t(3)),i=t(4),m=t(6),s=t(5),d=t(7),u=(t(15),function(e){function a(){return Object(o.a)(this,a),Object(m.a)(this,Object(s.a)(a).apply(this,arguments))}return Object(d.a)(a,e),Object(i.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"img\",{src:\"/wave.gif\",className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"div\",{className:\"title\"},r.a.createElement(\"span\",{className:\"titleBlue\"},\"<\"),\"\\xa0harmoni\\xa0\",r.a.createElement(\"span\",{className:\"titleBlue\"},\" />\")),r.a.createElement(\"input\",{type:\"file\",name:\"midiFile\"}),r.a.createElement(\"div\",{className:\"cardContainer\"},r.a.createElement(\"div\",{className:\"card\"},r.a.createElement(\"div\",{className:\"cardHeader\"},\"YOU GIVE US:\"),r.a.createElement(\"div\",{className:\"cardBody\"},\"Input MIDI file\",r.a.createElement(\"br\",null),\"Monophonic Melody\",r.a.createElement(\"br\",null),\"Basic Metadata\")),r.a.createElement(\"div\",{className:\"card\"},r.a.createElement(\"div\",{className:\"cardHeader\"},\"WE GIVE YOU:\"),r.a.createElement(\"div\",{className:\"cardBody\"},\"Output MIDI file\",r.a.createElement(\"br\",null),\"Harmonized Accompaniment\",r.a.createElement(\"br\",null),\"Chord Progression\"))),r.a.createElement(\"a\",{href:\"http://will.com\",target:\"_blank\",rel:\"noopener noreferrer\"},r.a.createElement(\"button\",{className:\"buttonPrimary\"},\"HARMONIZE\"))))}}]),a}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(u,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,a,t){e.exports=t(16)}},[[8,1,2]]]);","extractedComments":[]}